// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId Int @id @default(autoincrement())
  id String @unique
  password String
  verifyPassword String
  name String

  characters Characters[]
}

model Characters {
  characterId Int @id @default(autoincrement())
  userId Int 
  characterName String @unique 
  health Int @default(500) 
  power Int @default(100) 
  money Int @default(10000)

  user Users @relation(fields: [userId], references: [userId], onDelete: Cascade)

  inventories Inventories[]
  equipments Equipments[]
}

model Inventories {
  inventoryId Int @id @default(autoincrement())
  characterId Int 
  itemCode Int  
  count Int 

  character Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
}

model Equipments {
  equipmentId Int @id @default(autoincrement())
  characterId Int @unique 
  itemCode Int

  character Characters @relation(fields: [characterId], references: [characterId], onDelete: Cascade)
}


// 그냥 약간 테이블의 관계보단 아이템들의 내용을 조회하기위해 아이템 정보들이 답긴 데이블
model Items {
  itemCode Int @id @default(autoincrement())
  itemName String
  health Int? // 그냥 기타 아이템일 수도 있으니
  power Int? // 그냥 기타 아이템일 수도 있으니
  itemPrice Int
}